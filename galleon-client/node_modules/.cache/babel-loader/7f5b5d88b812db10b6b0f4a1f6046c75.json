{"ast":null,"code":"var _jsxFileName = \"/Users/ececakmak/Documents/Ironhack/modules_3/Galleon/galleon-client/src/context/auth.context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:3000\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nfunction AuthProviderWrapper(props) {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  const storeToken = token => {\n    localStorage.setItem('authToken', token);\n  };\n\n  const authenticateUser = () => {\n    const storedToken = localStorage.getItem('authToken');\n\n    if (storedToken) {\n      axios.get(`${API_URL}/auth/verify`, {\n        headers: {\n          Authorization: `Bearer ${storedToken}`\n        }\n      }).then(response => {\n        const user = response.data;\n        setIsLoggedIn(true);\n        setIsLoading(false);\n        setUser(user);\n      }).catch(error => {\n        setIsLoggedIn(false);\n        setIsLoading(false);\n        setUser(null);\n      });\n    } else {\n      setIsLoggedIn(false);\n      setIsLoading(false);\n      setUser(null);\n    }\n  };\n\n  const removeToken = () => {\n    localStorage.removeItem(\"authToken\");\n  };\n\n  const logOutUser = () => {\n    removeToken();\n    authenticateUser();\n  };\n\n  useEffect(() => {\n    authenticateUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      isLoading,\n      user,\n      storeToken,\n      authenticateUser,\n      logOutUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProviderWrapper, \"/wkMYUExdyWtGyjS2AwugXhX2sw=\");\n\n_c = AuthProviderWrapper;\nexport { AuthProviderWrapper, AuthContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProviderWrapper\");","map":{"version":3,"names":["React","useState","useEffect","axios","API_URL","AuthContext","createContext","AuthProviderWrapper","props","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","user","setUser","storeToken","token","localStorage","setItem","authenticateUser","storedToken","getItem","get","headers","Authorization","then","response","data","catch","error","removeToken","removeItem","logOutUser","children"],"sources":["/Users/ececakmak/Documents/Ironhack/modules_3/Galleon/galleon-client/src/context/auth.context.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst API_URL = \"http://localhost:3000\";\n \nconst AuthContext = React.createContext();\n \nfunction AuthProviderWrapper(props) {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n    const storeToken = (token) => {     \n        localStorage.setItem('authToken', token);\n    }\n\n    const authenticateUser = () => {  \n        const storedToken = localStorage.getItem('authToken');\n        \n\n        if (storedToken) {\n          axios.get(\n            `${API_URL}/auth/verify`, \n            { headers: { Authorization: `Bearer ${storedToken}`} }\n          )\n          .then((response) => { \n            const user = response.data;     \n            setIsLoggedIn(true);\n            setIsLoading(false);\n            setUser(user);        \n          })\n          .catch((error) => {        \n            setIsLoggedIn(false);\n            setIsLoading(false);\n            setUser(null);        \n          });      \n        } else {\n            setIsLoggedIn(false);\n            setIsLoading(false);\n            setUser(null);      \n        }   \n      }\n\n      const removeToken = () => {                  \n        localStorage.removeItem(\"authToken\");\n      }\n     \n     \n      const logOutUser = () => {              \n        removeToken(); \n        authenticateUser();\n      }\n \n      useEffect(() => {                                                \n        authenticateUser();\n      }, []);\n      \n  return (\n    <AuthContext.Provider value={{ isLoggedIn, isLoading, user, storeToken, authenticateUser, logOutUser }}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n \nexport { AuthProviderWrapper, AuthContext };"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;EAAA;;EAClC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAD,CAAhC;;EAEE,MAAMc,UAAU,GAAIC,KAAD,IAAW;IAC1BC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,KAAlC;EACH,CAFD;;EAIA,MAAMG,gBAAgB,GAAG,MAAM;IAC3B,MAAMC,WAAW,GAAGH,YAAY,CAACI,OAAb,CAAqB,WAArB,CAApB;;IAGA,IAAID,WAAJ,EAAiB;MACfjB,KAAK,CAACmB,GAAN,CACG,GAAElB,OAAQ,cADb,EAEE;QAAEmB,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,WAAY;QAAvC;MAAX,CAFF,EAICK,IAJD,CAIOC,QAAD,IAAc;QAClB,MAAMb,IAAI,GAAGa,QAAQ,CAACC,IAAtB;QACAjB,aAAa,CAAC,IAAD,CAAb;QACAE,YAAY,CAAC,KAAD,CAAZ;QACAE,OAAO,CAACD,IAAD,CAAP;MACD,CATD,EAUCe,KAVD,CAUQC,KAAD,IAAW;QAChBnB,aAAa,CAAC,KAAD,CAAb;QACAE,YAAY,CAAC,KAAD,CAAZ;QACAE,OAAO,CAAC,IAAD,CAAP;MACD,CAdD;IAeD,CAhBD,MAgBO;MACHJ,aAAa,CAAC,KAAD,CAAb;MACAE,YAAY,CAAC,KAAD,CAAZ;MACAE,OAAO,CAAC,IAAD,CAAP;IACH;EACF,CAzBH;;EA2BE,MAAMgB,WAAW,GAAG,MAAM;IACxBb,YAAY,CAACc,UAAb,CAAwB,WAAxB;EACD,CAFD;;EAKA,MAAMC,UAAU,GAAG,MAAM;IACvBF,WAAW;IACXX,gBAAgB;EACjB,CAHD;;EAKAjB,SAAS,CAAC,MAAM;IACdiB,gBAAgB;EACjB,CAFQ,EAEN,EAFM,CAAT;EAIJ,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEV,UAAF;MAAcE,SAAd;MAAyBE,IAAzB;MAA+BE,UAA/B;MAA2CI,gBAA3C;MAA6Da;IAA7D,CAA7B;IAAA,UACGxB,KAAK,CAACyB;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAvDQ1B,mB;;KAAAA,mB;AAyDT,SAASA,mBAAT,EAA8BF,WAA9B"},"metadata":{},"sourceType":"module"}